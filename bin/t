#!/bin/sh
# store pwd in a variable
ZOXIDE_RESULT=$(zoxide query $1)

# if empty exit
if [ -z "$ZOXIDE_RESULT" ]; then
  exit 0
fi

# get folder name
FOLDER=$(basename $ZOXIDE_RESULT)

# lookup tmux session name
SESSION=$(tmux list-sessions | grep $FOLDER | awk '{print $1}')
SESSION=${SESSION//:/}

# template
create_session () {
	if [ $# -eq 2 ]; then
		tmux new-session -d -s $1 \; \
			switch-client -t $1 \; \
			new-window \; \
			rename-window edit \; \
			send-keys '$EDITOR' Enter \; \
			new-window \; \
			rename-window debug \; \
			new-window \; \
			rename-window git \; \
			send-keys 'lazygit' Enter \; \
			select-window -t 1
	else
		tmux new-session -s $1 \; \
			new-window \; \
			rename-window edit \; \
			send-keys '$EDITOR' Enter \; \
			new-window \; \
			rename-window debug \; \
			new-window \; \
			rename-window git \; \
			send-keys 'lazygit' Enter \; \
			select-window -t 1
	fi
}

# check if variable is empty 
# if not currently in tmux
if [ -z "$TMUX" ]; then
  # tmux is not active
  if [ -z "$SESSION" ]; then
    # session does not exist
    # jump to directory
    cd $ZOXIDE_RESULT
    # create session
    # tmux new-session -s $FOLDER
		create_session $FOLDER
  else
    # session exists
    # attach to session
    tmux attach -t $SESSION
  fi
else
  # tmux is active
  if [ -z "$SESSION" ]; then
    # session does not exist
    # jump to directory
    cd $ZOXIDE_RESULT
    # create session
    # tmux new-session -d -s $FOLDER
		create_session $FOLDER detached
    # attach to session
    # tmux switch-client -t $FOLDER
  else
    # session exists
    # attach to session
    # switch to tmux session
    tmux switch-client -t $SESSION
  fi
fi
